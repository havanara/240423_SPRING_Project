<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ezen.test.repository.BoardDAO">
  
  <!-- parameterType 생략 가능 -->
  <insert id="insert" parameterType="com.ezen.test.domain.BoardVO">
  	insert into board(title, writer, content)
  	values (#{title}, #{writer}, #{content})
  </insert>
  
  <select id="getList" resultType="com.ezen.test.domain.BoardVO">
  	select * from board where isDel = 'N'
  	<include refid="search"></include>
  	order by bno desc
  	limit #{pageStart}, #{qty}
  </select>
  
  <select id="getDetail" resultType="com.ezen.test.domain.BoardVO">
  	select * from board where bno = #{bno}
  </select>
  
  <update id="update">
  	update board set
	title = #{title},
	content = #{content},
	read_count = read_count-2
	where
	bno = #{bno}
  </update>
  
  <update id="delete">
  	update board set isDel = "Y" where bno = #{bno}
  </update>
  
  <update id="updateReadCount">
  	update board set read_count = read_count+1 where bno = #{bno}
  </update>
  
  <select id="getTotal" resultType="int">
  	select count(bno) from board where isDel = "N"
  	<include refid="search"></include>
  </select>
  
  <select id="selectBno" resultType="int">
  	select max(bno) from board;
  </select>
  
  <update id="cmtCountUpdate">
  	update board
	set cmt_qty = (
	select count(bno) from comment
	where bno = board.bno);
  </update>
  
  <update id="fileCountUpdate">
	update board
	set has_file = (
	select count(bno) from file
	where bno = board.bno);
  </update>
  
  <!-- select * from board where isDel = 'N' and title like %keyword% or content like %keyword% -->
  <!-- select * from board where isDel = 'N' and ( ... or ... or ... ) -->
  <!-- ... or ... or ... <- 부분이 있을수도 있고 없을수도 있는 동적 값 -->
  <sql id="search">
  	<if test="type != null">
  	<!-- forEach에서 trim suffix로 뒤에 or을 붙이게 설정 -> 제일 마지막에 붙은 or은 지워야 함  -->
  	<!-- suffixOverrides = or 처리하여 가장 마지막에 붙은 or은 지우게 함 -->
  		<trim prefix="and (" suffix=")" suffixOverrides="or">
  			<foreach collection="typeToArray" item="type">
  				<trim suffix="or">
  					<choose>
  						<when test="type == 't'.toString()">
  							title like concat('%', #{keyword}, '%')
  						</when>
  						<when test="type == 'w'.toString()">
  							writer like concat('%', #{keyword}, '%')
  						</when>
  						<when test="type == 'c'.toString()">
  							content like concat('%', #{keyword}, '%')
  						</when>
  					</choose>
  				</trim>
  			</foreach>
  		</trim>
  	</if>
  </sql>
  
  </mapper>