package com.ezen.www.service;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ezen.test.domain.MemberVO;
import com.ezen.www.domain.UserVO;
import com.ezen.www.repository.UserDAO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class UserServiceImpl implements UserService{

	private final UserDAO udao;
	private final HttpServletRequest request;

	@Transactional
	@Override
	public int register(UserVO uvo) {
		//유저에 대한 내용 넣기
		int isOK = udao.insert(uvo);
		
		// 권한 추가
		return udao.insetAuthInit(uvo.getEmail());
	}

	@Override
	public int updateLastLogin(String authEmail) {
		// TODO Auto-generated method stub
		return udao.updateLastLogin(authEmail);
	}
	
	@Override
	public List<UserVO> getList(){
		List<UserVO> userList = udao.getList();
		for(UserVO uvo : userList) {
			uvo.setAuthList(udao.selectAuths(uvo.getEmail()));
		}
		return userList;
	}

	@Override
	public void modify(UserVO uvo) {
		//pw 여부에 따라 변경사항을 나누어서 처리
		//pw가 없다면 기존값 설정, 있다면 암호화 처리하여 수정
		if(uvo.getPwd() == null || uvo.getPwd().length() == 0) {
			UserVO sesUvo = 
		}
//		if(mvo.getPw() == null || mvo.getPw().length() == 0) {
//			MemberVO sesMvo = (MemberVO)request.getSession().getAttribute("ses");
//			mvo.setPw(sesMvo.getPw());
//		}else {
//			String setPw = passwordEncoder.encode(mvo.getPw());
//			mvo.setPw(setPw);
//		}
//		log.info(">> pw 수정 후 mvo >> {} ", mvo);
//		
//		mdao.update(mvo);
	}
}
